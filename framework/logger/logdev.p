##############################################################################
#
##############################################################################

@CLASS
LogDevice

@OPTIONS
partial



##############################################################################
@GET[]
	$result(def $filename)
#end @GET[]



##############################################################################
@GET_filename[]
	$result[$self._filename]
#end @GET_filename[]



##############################################################################
@create[sLog]
	$self._filename[$sLog]
	$self._log[]
	$self._count(0)
#end @create[]



##############################################################################
@append[sMessage]
	$sMessage[^taint[as-is][$sMessage]^#0A]

	^rem{ *** записываем сообщение в лог *** }
	$self._log[${self._log}${sMessage}]

	^rem{ *** TODO: нужно вызывать для сохранения в конце работы
		            либо с опредленной периодичностью и в конце *** }
	^self.flush[]
#end @append[]



##############################################################################
@flush[]
	^if(!$self._count && def $self._log){
		$self._log[^#0A^#0A$self._log]											^rem{ *** если первое сохранение - добавляем двойной перенос *** }
	}

	^if(def $self._log){
		^self._log.save[append;$_filename]										^rem{ *** записываем в файл *** }
	}
	
	^rem{ *** очищаем лог *** }
	$self._log[$NULL]
	
	^rem{ *** увеличиваем счетчик сохранений *** }
	^self._count.inc[]
#end @flush[]
